<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="explain_picture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>